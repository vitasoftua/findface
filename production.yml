version: '3'

services:

  db:
    image: postgres:11-alpine
    env_file:
      - ./etc/docker/postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./.docker_data/postgresql:/var/lib/postgresql/data/pgdata
    ports:
      - "5555:5432"

  web:
    image: registry.gitlab.com/oldminteam/genesis
    command: /bin/bash -c "python src/manage.py migrate && python src/manage.py compilemessages && python src/manage.py collectstatic --noinput && python src/manage.py compilemessages && uwsgi -s 0.0.0.0:8000 -M -L -R 5000 --env DJANGO_SETTINGS_MODULE=core.settings -w "core.wsgi:application" --chdir /code/src"
    env_file:
      - ./etc/docker/postgres.env
      - ./etc/docker/web.env
    environment:
      - WEB_HOSTNAME=genesis.oldmin.team,167.99.132.178
    volumes:
      - ./media:/code/media
      - ./public:/code/public
    depends_on:
      - db
      - redis

  web-stream:
    image: registry.gitlab.com/oldminteam/genesis
    command: /bin/bash -c "python src/manage.py migrate && python src/manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:5000 --env DJANGO_SETTINGS_MODULE=core.settings --chdir "/code/src" -t 10800 -w 4 core.wsgi"
    env_file:
      - ./etc/docker/postgres.env
      - ./etc/docker/web.env
    environment:
      - WEB_HOSTNAME=django-stream
    volumes:
      - ./media:/code/media
      - ./public:/code/public
    depends_on:
      - db

  worker:
    image: registry.gitlab.com/oldminteam/genesis
    env_file:
      - ./etc/docker/web.env
      - ./etc/docker/postgres.env
    command: /bin/bash -c "cd src && celery -A core worker -l info"
    volumes:
      - ./media:/code/media
    depends_on:
      - rabbit
      - db

  beat:
    image: registry.gitlab.com/oldminteam/genesis
    env_file:
      - ./etc/docker/web.env
      - ./etc/docker/postgres.env
    command: /bin/bash -c "cd src && celery -A core beat -l info"
    volumes:
      - ./media:/code/media
    depends_on:
      - rabbit
      - db

  ws:
    image: registry.gitlab.com/oldminteam/genesis
    command: /bin/bash -c "cd src/ && daphne -b 0.0.0.0 -p 8081 core.asgi:application"
    environment:
      - WEB_HOSTNAME=167.99.132.178
    env_file:
      - ./etc/docker/postgres.env
      - ./etc/docker/web.env
    volumes:
      - ./media:/code/media
      - ./public:/code/public
    depends_on:
      - db
      - redis

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  redis:
    restart: unless-stopped
    image: redis:5-alpine
    volumes:
      - ./.docker_data/redis:/data

  nginx:
    restart: always
    image: nginx:1.16
    command: /bin/bash -c "envsubst '$$WEB_HOST $$STREAM_HOST $$STREAM_PORT $$NGINX_PORT $$SERVER_NAME $$WS_HOST $$WS_PORT' < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    environment:
      - SERVER_NAME=genesis.oldmin.team
      - WEB_HOST=web
      - STREAM_HOST=web-stream
      - STREAM_PORT=5000
      - NGINX_PORT=443
      - WS_HOST=ws
      - WS_PORT=8081
    volumes:
      - ./media:/code/media
      - ./public:/code/public
      - ./etc/nginx/nginx.template:/etc/nginx/conf.d/nginx.template
      - ./.docker_data/letsencrypt/etc/letsencrypt:/etc/letsencrypt
      - ./.docker_data/letsencrypt/src/letsencrypt/letsencrypt-site:/letsencrypt/data
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - web-stream
      - ws

  watchtower:
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 120 --cleanup
